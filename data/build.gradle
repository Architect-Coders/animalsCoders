apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.sdkMaxVersion
    buildToolsVersion rootProject.ext.buildToolsLibVersion

    defaultConfig {
        minSdkVersion rootProject.ext.sdkMinVersion
        targetSdkVersion rootProject.ext.sdkMaxVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':domain')

    implementation "androidx.appcompat:appcompat:$compatLibVersion"

    testImplementation "junit:junit:$testJunitLibVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerLibVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$testExpressoLibVersion"

    //ARROW
    implementation "io.arrow-kt:arrow-core-data:$arrow_version"

    //Firebase
    implementation "com.google.firebase:firebase-auth:$firebaseAuthLibVersion"
    implementation "com.google.firebase:firebase-core:$firebaseCoreLibVersion"
    implementation "com.google.firebase:firebase-config:$firebaseConfigLibVersion"
    implementation "com.google.firebase:firebase-firestore:$firebaseFirestoreLibVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxCoroutines"

    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    implementation("com.squareup.retrofit2:retrofit:$retrofitVersion") {
        // exclude Retrofitâ€™s OkHttp peer-dependency module and define your own module import
        exclude module: 'okhttp'
    }

    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
}
